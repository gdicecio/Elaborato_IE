clc;
clear;


%% Read the data
data = xlsread('Filtering/Dati_Filtrati');
pca_data = xlsread('PCA_&_Clustering/6_Comp/PCA_6_Comp');
cluster_data = xlsread('PCA_&_Clustering/6_Comp/Clustering/8_Cluster/Cluster_Vector');
N_cluster = max (cluster_data); 
C = [ 1 2 3; 3 4 5; 5 6 7; 8 7 4];
D = distance_matrix(C)

%% Calcolo centroidi
centroid_index = zeros(N_cluster,1);
for i = 1: N_cluster
    index = find(cluster_data==i); %Indici delle righe di uno stesso cluster
    n_size = length(index);
    cluster_elements = pca_data(index,:);
    if (size(index) == 1) 
        centroid = index;       %Riga del centroide
        centroid_index(i) = index;
    else
        %Matrice delle distanze
        D = distance_matrix(cluster_elements);
        %Scelgo la riga con la somma delle distanze minima
        
        temp = find(distance_sum == min(distance_sum),1);
        centroid_index(i) = find(pca_data == cluster_elements(temp,:),1);    %L'indice mappato nel dataset
    end
end

%% Function

function D = distance_matrix(C)
    % C è una matrice che per per ogni riga un punto e per ogni colonna
    % una coordinata su un asse
    % Il numero di colonne identifica la dimensionalità dello spazio
    % Il numero di righe identifica il numero di punti
    n = size(C);
    point_number = n(1);
    D = zeros(point_number,point_number);
    for i = 1: point_number
        for j = 1:point_number
            D(i,j) = sqrt(sum((C(i,:)-C(j,:)).^2));
        end
    end
end

function index = centroid(C)
    
end